name: Master pull-request merge reaction
on:
  pull_request:
    types: [closed]
    branches:
    - 'master'
env:
  starcalc_qts_win_artifact_path: ${{ github.workspace }}/StarCalcQtSWin
  starcalc_qts_linux_artifact_path: ${{ github.workspace }}/StarCalcQtSLinux
  
jobs:
  tag_master_and_sync_dev:
    name: Tag master merge commit, FF back to dev
    if: github.event.pull_request.merged == true
    runs-on: windows-latest
    outputs:
      new_version: ${{ steps.get-proj-ver.outputs.version }}
    steps:
    - name: Get project version
      id: get-proj-ver
      uses: oblivioncth/actions/cmake/get-project-version@dev
    - name: Set Git user to ObyBotCI
      uses: oblivioncth/actions/git/set-git-user-to-oby-bot@dev
    - name: Tag master with new version tag
      uses: oblivioncth/actions/git/tag@dev
      with:
        tag: 'v${{ steps.get-proj-ver.outputs.version }}'
        message: 'Release v${{ steps.get-proj-ver.outputs.version }}'
    - name: Move 'latest' tag
      uses: oblivioncth/actions/git/move-latest-tag@dev
    - name: Fast-forward merge master into to dev
      if: always()
      uses: oblivioncth/actions/git/merge-branches@dev
      with:
        source_branch: master
        target_branch: dev
        ff: only
        
  build_starcalc_release_windows:
    name: Build StarCalc Release (Windows)
    needs: tag_master_and_sync_dev
    if: github.event.pull_request.merged == true
    uses: ./.github/workflows/build-starcalc-windows.yml
    secrets:
      qt_static_url: ${{ secrets.QT_WINDOWS_STATIC_URL }}
      
  build_starcalc_release_linux:
    name: Build StarCalc Release (Linux)
    needs: tag_master_and_sync_dev
    if: github.event.pull_request.merged == true
    uses: ./.github/workflows/build-starcalc-linux.yml
    secrets:
      qt_static_url: ${{ secrets.QT_LINUX_STATIC_URL }}

  create-release:
    name: Create GitHub release
    needs: [build_starcalc_release_windows, build_starcalc_release_linux, tag_master_and_sync_dev]
    if: github.event.pull_request.merged == true
    runs-on: windows-latest
    steps:
    - name: Set release artifact names
      run: |
        echo "release_qts_win_package_name=${{ needs.build_starcalc_release_windows.outputs.qt_static_artifact_name }}" >> $Env:GITHUB_ENV
        echo "release_qts_linux_package_name=${{ needs.build_starcalc_release_linux.outputs.qt_static_artifact_name }}" >> $Env:GITHUB_ENV
    - name: Download built static StarCalc artifact (Windows)
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.release_qts_win_package_name }}
        path: ${{ env.starcalc_qts_win_artifact_path }}
    - name: Download built static StarCalc artifact (Linux)
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.release_qts_linux_package_name }}
        path: ${{ env.starcalc_qts_linux_artifact_path }}
    - name: Zip up release artifacts
      run: |
        7z a "${{ env.release_qts_win_package_name }}.zip" "${{ env.starcalc_qts_win_artifact_path }}/*"
        7z a "${{ env.release_qts_linux_package_name }}.zip" "${{ env.starcalc_qts_linux_artifact_path }}/*"
    - name: Generate release
      uses: softprops/action-gh-release@v1
      with:
        name: "StarCalc Release v${{ needs.tag_master_and_sync_dev.outputs.new_version }}"
        tag_name: "v${{ needs.tag_master_and_sync_dev.outputs.new_version }}"
        fail_on_unmatched_files: true
        generate_release_notes: true
        files: |
          ${{ env.release_qts_win_package_name }}.zip
          ${{ env.release_qts_linux_package_name }}.zip
    
        